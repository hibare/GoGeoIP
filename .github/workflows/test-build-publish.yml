name: Test, Build & Publish

on:
  push:
    tags:
      - "v*"
    branches:
      - main

  pull_request:
    branches:
      - "main"
      - "dev"
    paths-ignore:
      - "**/README.md"
      - "**/Makefile"
      - "**/.env.**"
      - "**/docker-compose.*.yml"
      - "**/.vscode"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: go.mod

      - name: Run Test
        run: make test

  docker-image-build-publish:
    runs-on: ubuntu-latest
    needs: [run-tests]
    permissions:
      contents: write
      id-token: write # For cosign
      packages: write # For GHCR
    steps:
      - name: Set Docker Tags
        id: set-docker-tags
        run: |          
          if [ "${{ github.event_name }}" == "push" ]; then
            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              DOCKER_TAGS="next"
            elif [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
              DOCKER_TAGS="type=semver,pattern={{version}} type=semver,pattern={{major}}"
            else
              echo "Unknown ref: ${{ github.ref }}"
              exit 1
            fi
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            DOCKER_TAGS="test"
          else
            echo "Unknown event: ${{ github.event_name }}"
            exit 1
          fi

          echo "docker_tags=$DOCKER_TAGS" >> $GITHUB_OUTPUT
        shell: bash

      - name: Set Docker Image Names
        id: set-docker-image-names
        run: |
          IMAGE_NAMES="hibare/go-geo-ip ghcr.io/hibare/go-geo-ip"
          
          echo "docker_image_names=$IMAGE_NAMES" >> $GITHUB_OUTPUT
        shell: bash
  
      - name: image-build-publish
        uses: hibare/.github/github/shared-workflows/docker-image-build-publish@030fa3508e984f9e90dd35f107883798e85e86e4 # v0.2.0
        with:
          image_names: ${{ steps.set-docker-image-names.outputs.docker_image_names }}
          tags: ${{ steps.set-docker-tags.outputs.docker_tags }}
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64
          push_dockerhub: ${{ github.event_name != 'pull_request' }}
          push_ghcr: ${{ github.event_name != 'pull_request' }}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
